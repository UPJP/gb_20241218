<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Ask GPT</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.css">
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body>

  <div class="ui container">
    <h1 class="ui header">GPT Chat</h1>

    <!-- 메시지 입력 영역 -->
    <div>
      <label for="msg">메세지 입력:</label>
      <div>
        <textarea rows="5" cols="40" id="msg"></textarea>
      </div>
    </div>
    <br>
    <input type="button" id="sendBtn" value="전송" class="ui button primary">

    <!-- 대화 내용 표시 -->
    <h4 class="ui horizontal divider header">메세지</h4>
    <div class="ui segment" id="result">
      <ol class="discussion">
        <!-- 대화 내용이 여기에 추가됨 -->
      </ol>
    </div>

  </div>

  <script>
    $(function(){
      $("#sendBtn").on("click", function(event){
        var msg = $("#msg").val();  // 사용자가 입력한 메시지
        addToDiscussion("self", msg);  // 사용자의 메시지를 화면에 추가
        send(msg);  // 서버로 메시지를 전송

        $("#msg").val("");  // 메시지 입력 필드 초기화
        $("#msg").focus();  // 메시지 입력 필드에 포커스
      });
    });

    function addToDiscussion(writer, msg) {
      var escapedMsg = escapeHtml(msg);  // 메시지 내용 XSS 방지 처리
      var contents = "<li class='" + writer + "'>"                    
                      + "<div class='message'>"
                      + "<p>" + escapedMsg + "</p>"
                      + "</div></li>";

      $(".discussion").prepend(contents);  // 화면에 메시지 추가
    }

    function escapeHtml(str) {
      return str.replace(/[&<>"'\/]/g, function (s) {
        return {
          '&': '&amp;',
          '<': '&lt;',
          '>': '&gt;',
          '"': '&quot;',
          "'": '&#39;',
          '/': '&#47;'
        }[s];
      });
    }

    async function send(msg) {
      try {
        const response = await fetch("../ask", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ "prompt": msg }),  // 서버로 메시지 전송
        });

        const prediction = await response.json();  // 서버로부터 응답 받기
        if (prediction.response) {
          addToDiscussion('other', prediction.response.content);  // 서버 응답 화면에 추가
        } else {
          console.error("No response content in the prediction.");
        }
      } catch (error) {
        console.error('Error fetching data:', error);
        alert('오류가 발생하였습니다. :' + error);  // 에러 메시지 표시
      }
    }
  </script>

</body>
</html>
