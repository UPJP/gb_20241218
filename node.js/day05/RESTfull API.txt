RESTful API 라고 부르는 개념도 있는데 알아두면 좋으니까 알아보도록 합시다. 

REST는 어떤 잡배 아저씨가 졸업논문으로 쓴 '좋은 API 만드는 법'을 의미합니다.

6가지 원칙이 있는데 

 

1. Uniform Interface 

- 여러 URL과 method는 일관성이 있어야합니다.

- 하나의 URL로는 하나의 데이터를 가져오게 디자인하는게 좋고 

- 간결하고 예측가능하게 URL과 method를 만드는게 좋습니다. 

 

2. Client-server 역할 구분 

유저에게 서버역할을 맡기거나 DB를 직접 입출력하게 시키면 안좋습니다. 

 

3. Stateless

셋째로 요청들은 서로 의존성이 있으면 안되고 각각 독립적으로 처리되어야합니다.

 

4. Cacheable

서버가 보내는 자료들은 캐싱이 가능해야합니다.

그러니까 자주 받는 자료들은 브라우저에서 하드에 저장해놓고 

서버에 요청을 날리는게 아니라 하드에서 뽑아쓰는걸 캐싱이라고 합니다. 

 

5. Layered System 

서버기능을 만들 때 레이어를 걸쳐서 코드가 실행되도록 만들어도 된다고 합니다. 

 

6. Code on demand

서버는 실행가능한 코드를 보낼 수 있습니다. 

 

 

그래서 이런 원칙들을 잘 지키면서 서버 API 만들면 그걸 REST아니면 RESTful API 라고 부릅니다. 

그런데 잡배 아저씨 한명의 졸업논문일 뿐이라 근본은 별로 없는 개념이고

저걸 정확히 지키는 서버도 거의 없고 추상적인 포인트도 많아서 권장사항으로만 참고만 해두면 되겠습니다.

요즘은 그냥 method, URL만 잘 기입해두면 관습적으로 REST하다고 부릅니다. 